name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read
  pull-requests: read

jobs:
  lint-and-autofix:
    name: Lint & Auto-Fix
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint and Auto-Fix
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          eslint_extensions: js,ts,tsx
          eslint_auto_fix: true
          commit: true
          commit_message: "style: auto-fix ESLint issues"

  lint-and-typecheck:
    name: Lint & Typecheck
    runs-on: ubuntu-latest
    needs: lint-and-autofix
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: ESLint
        run: npm run lint

      - name: TypeScript type check
        run: npx tsc --noEmit

      - name: Prettier - check formatting
        run: npx prettier --check .

  tests:
    name: Tests (unit + api + integration)
    needs: lint-and-typecheck
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: benchwarmers_ci
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" \
          --health-interval=10s \
          --health-timeout=5s \
          --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/benchwarmers_ci
      REDIS_URL: redis://localhost:6379
      NEXTAUTH_SECRET: test-secret
      NEXTAUTH_URL: http://localhost:3000
      LOG_LEVEL: info
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Push DB schema
        run: npm run db:push

      - name: Seed test data (optional)
        run: |
          if npm run | grep -q "db:seed:test"; then
            npm run db:seed:test
          fi

      - name: Run tests (coverage + integration)
        run: |
          npm run test:ci
          npm run test:integration -- --ci

  build:
    name: Build
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js
        run: npm run build

  autofix:
    name: Auto-fix (ESLint & Prettier)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint --fix
        run: npx eslint . --ext .ts,.tsx --fix || true

      - name: Run Prettier --write
        run: npx prettier --write . || true

      - name: Commit & push changes (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "ci(autofix): apply ESLint/Prettier fixes"
            git push
          else
            echo "No changes to commit"
          fi